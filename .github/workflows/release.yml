name: Release Binary

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'
          cache: true
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod tidy

      - name: Create bin directory
        run: mkdir -p bin

      - name: Build binaries
        run: |
          # Build for Linux
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/clinvarDL-${{ env.VERSION }}-linux-amd64 -gcflags "-N -l" -ldflags "-s -w" cmd/main.go
          
          # Build for Windows
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o bin/clinvarDL-${{ env.VERSION }}-windows-amd64.exe -gcflags "-N -l" -ldflags "-s -w" cmd/main.go
          
          # Build for macOS
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o bin/clinvarDL-${{ env.VERSION }}-darwin-amd64 -gcflags "-N -l" -ldflags "-s -w" cmd/main.go

      - name: Zip binaries
        run: |
          cd bin
          zip clinvarDL-${{ env.VERSION }}-linux-amd64.zip clinvarDL-${{ env.VERSION }}-linux-amd64
          zip clinvarDL-${{ env.VERSION }}-windows-amd64.zip clinvarDL-${{ env.VERSION }}-windows-amd64.exe
          zip clinvarDL-${{ env.VERSION }}-darwin-amd64.zip clinvarDL-${{ env.VERSION }}-darwin-amd64

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            bin/clinvarDL-${{ env.VERSION }}-linux-amd64.zip
            bin/clinvarDL-${{ env.VERSION }}-windows-amd64.zip
            bin/clinvarDL-${{ env.VERSION }}-darwin-amd64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}